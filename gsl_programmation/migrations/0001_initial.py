# Generated by Django 5.1.1 on 2024-12-09 11:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("gsl_core", "0004_alter_adresse_commune_alter_adresse_postal_code_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Enveloppe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("DETR", "DETR"), ("DSIL", "DSIL")],
                        verbose_name="Type",
                    ),
                ),
                (
                    "montant",
                    models.DecimalField(
                        decimal_places=2, max_digits=14, verbose_name="Montant"
                    ),
                ),
                ("annee", models.IntegerField(verbose_name="Année")),
                (
                    "deleguee_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gsl_programmation.enveloppe",
                        verbose_name="Enveloppe déléguée",
                    ),
                ),
                (
                    "perimetre_arrondissement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gsl_core.arrondissement",
                        verbose_name="Périmètre d’arrondissement",
                    ),
                ),
                (
                    "perimetre_departement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gsl_core.departement",
                        verbose_name="Périmètre départemental",
                    ),
                ),
                (
                    "perimetre_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gsl_core.region",
                        verbose_name="Périmètre régional",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=(
                            "type",
                            "annee",
                            "perimetre_region",
                            "perimetre_departement",
                            "perimetre_arrondissement",
                        ),
                        name="unicity_by_perimeter_and_type",
                        nulls_distinct=False,
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("perimetre_region__isnull", False),
                            ("perimetre_departement__isnull", False),
                            ("perimetre_arrondissement__isnull", False),
                            _connector="XOR",
                        ),
                        name="only_one_perimeter",
                        violation_error_message="Un seul type de périmètre doit être renseigné parmi les trois possibles.",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(("type", "DSIL"), _negated=True),
                            models.Q(
                                ("deleguee_by__isnull", True),
                                ("perimetre_region__isnull", False),
                            ),
                            models.Q(
                                ("deleguee_by__isnull", False),
                                models.Q(
                                    ("perimetre_departement__isnull", False),
                                    ("perimetre_arrondissement__isnull", False),
                                    _connector="XOR",
                                ),
                            ),
                            _connector="OR",
                        ),
                        name="dsil_regional_perimeter",
                        violation_error_message="Il faut préciser un périmètre régional pour une enveloppe de type DSIL non déléguée.",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(("type", "DETR"), _negated=True),
                            models.Q(
                                ("deleguee_by__isnull", True),
                                ("perimetre_departement__isnull", False),
                            ),
                            models.Q(
                                ("deleguee_by__isnull", False),
                                ("perimetre_arrondissement__isnull", False),
                            ),
                            _connector="OR",
                        ),
                        name="detr_departemental_perimeter",
                        violation_error_message="Il faut préciser un périmètre départemental pour une enveloppe de type DETR non déléguée.",
                    ),
                ],
            },
        ),
    ]
