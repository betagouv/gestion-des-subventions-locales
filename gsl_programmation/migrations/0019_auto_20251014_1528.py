# Generated by Django 5.2.5 on 2025-10-14 13:28

from django.db import migrations
from django.db.migrations import RunPython

from gsl_projet.constants import DOTATION_DETR, DOTATION_DSIL


def delegate_enveloppes(apps, schema_editor):
    Enveloppe = apps.get_model("gsl_programmation", "Enveloppe")
    Perimetre = apps.get_model("gsl_core", "Perimetre")
    for e in Enveloppe.objects.all():
        if (
            e.deleguee_by is not None
            or (e.dotation == DOTATION_DETR and e.perimetre.arrondissement is None)
            or (e.dotation == DOTATION_DSIL and e.perimetre.departement is None)
        ):
            continue

        if e.perimetre.arrondissement is not None:
            parent_perimetre = Perimetre.objects.get_or_create(
                region_id=e.perimetre.region_id,
                departement_id=e.perimetre.departement_id,
                arrondissement_id=None,
            )[0]
        else:  # e.perimetre.departement is not None otherwise we would have continue above
            parent_perimetre = Perimetre.objects.get_or_create(
                region_id=e.perimetre.region_id,
                departement_id=None,
                arrondissement_id=None,
            )[0]

        e.deleguee_by = Enveloppe.objects.get_or_create(
            dotation=e.dotation,
            annee=e.annee,
            perimetre=parent_perimetre,
            defaults={"montant": e.montant},
        )[0]
        e.save(update_fields=["deleguee_by"])


class Migration(migrations.Migration):
    dependencies = [
        ("gsl_programmation", "0018_alter_enveloppe_unicity_by_perimeter_and_dotation"),
    ]

    operations = [
        # Ensure Enveloppe have correct delegue_by values
        RunPython(delegate_enveloppes)
    ]
